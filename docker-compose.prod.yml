# ‚òÅÔ∏è Cloud IDE - Production Environment
# Production configuration with Nginx, Frontend, Backend, and MongoDB

services:
  # üåê Nginx - Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cloud-ide-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - frontend-dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - cloud-ide-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üçÉ MongoDB Database
  mongo:
    image: mongo:8.0
    container_name: cloud-ide-mongo-prod
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-cloudIDE}
    command: ["mongod", "--auth", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - cloud-ide-network

  # üü¢ Backend API Server
  backend:
    image: cloud-ide-backend-prod:latest
    container_name: cloud-ide-backend-prod
    entrypoint: [""]
    command: ["node", "index.js"]
    restart: unless-stopped
    privileged: true
    expose:
      - "5000"
    env_file:
      - ./backend/.env
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - workspace-data:/app/workspace
      - logs-data:/app/logs
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_INITDB_DATABASE:-cloudIDE}?authSource=admin
      - DOCKER_HOST=unix:///var/run/docker.sock
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - LOG_LEVEL=${LOG_LEVEL:-warn}
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - cloud-ide-network

  # ‚öõÔ∏è Frontend React Application
  frontend:
    image: cloud-ide-frontend-prod:latest
    container_name: cloud-ide-frontend-prod
    restart: unless-stopped
    volumes:
      - frontend-dist:/app/dist
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/api
    networks:
      - cloud-ide-network

# üíæ Volumes
volumes:
  mongo-data:
    driver: local
    name: cloud-ide-mongo-data-prod-compose
  mongo-config:
    driver: local
    name: cloud-ide-mongo-config-prod-compose
  workspace-data:
    driver: local
    name: cloud-ide-workspace-prod-compose
  logs-data:
    driver: local
    name: cloud-ide-logs-prod-compose
  frontend-dist:
    driver: local
    name: cloud-ide-frontend-dist-prod-compose

# üåê Network
networks:
  cloud-ide-network:
    driver: bridge
    name: cloud-ide-network-prod-compose
