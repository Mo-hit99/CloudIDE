version: '3.9'

# ‚òÅÔ∏è Cloud IDE - Development Environment
# Optimized Docker Compose configuration for development with hot reloading

services:
  # üçÉ MongoDB Database - Latest stable version with optimized settings
  mongo:
    image: mongo:8.0
    container_name: cloud-ide-mongo
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-cloudIDE}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cloud-ide-network

  # üü¢ Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: cloud-ide-backend
    restart: unless-stopped
    privileged: true
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    env_file:
      - ./backend/.env
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspace:/app/workspace
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-password123}@mongo:27017/${MONGO_INITDB_DATABASE:-cloudIDE}?authSource=admin
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:${FRONTEND_PORT:-5173}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cloud-ide-network

  # ‚öõÔ∏è Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: cloud-ide-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_PORT:-5000}
      - NODE_ENV=development
      - VITE_APP_NAME=Cloud IDE
      - VITE_APP_VERSION=2.0.0
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cloud-ide-network



# üíæ Volumes
volumes:
  mongo-data:
    driver: local
    name: cloud-ide-mongo-data-dev
  mongo-config:
    driver: local
    name: cloud-ide-mongo-config-dev

# üåê Network
networks:
  cloud-ide-network:
    driver: bridge
    name: cloud-ide-network-dev