# Cloud IDE - Development Environment
services:
  mongo:
    image: mongo:8.0
    container_name: cloud-ide-mongo-compose
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=cloudIDE
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cloud-ide-network

  backend:
    image: mohitkohli007/cloud-ide-backend:latest
    container_name: cloud-ide-backend-compose
    restart: unless-stopped
    privileged: true
    ports:
      - "5000:5000"
    command: ["node", "index.js"]
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspace:/app/workspace
    environment:
      - MONGO_URI=mongodb://admin:password123@mongo:27017/cloudIDE?authSource=admin
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:5173
      - DOCKER_HOST=unix:///var/run/docker.sock
      - JWT_SECRET=dev-secret-key
      - JWT_EXPIRES_IN=7d
      - LOG_LEVEL=debug
    networks:
      - cloud-ide-network

  frontend:
    image: mohitkohli007/cloud-ide-frontend:latest
    container_name: cloud-ide-frontend-compose
    restart: unless-stopped
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:5000
      - NODE_ENV=development
      - VITE_APP_NAME=Cloud IDE
      - VITE_APP_VERSION=2.0.0
      - BACKEND_URL=http://backend:5000
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cloud-ide-network

volumes:
  mongo-data:
    driver: local
    name: cloud-ide-mongo-data-compose
  mongo-config:
    driver: local
    name: cloud-ide-mongo-config-compose

networks:
  cloud-ide-network:
    driver: bridge
    name: cloud-ide-network-compose
